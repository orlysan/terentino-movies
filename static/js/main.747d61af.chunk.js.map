{"version":3,"sources":["constants.js","components/ImageCarusel.js","utils.js","components/MovieCard.js","components/Gallery.js","components/Paginator.js","pages/Home.js","pages/About.js","pages/AdvancedSearch.js","pages/Movie.js","components/Search.js","components/NavbarMovies.js","components/ScrollToTops.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","TARANTINO_IMAGE","ImageCarusel","props","get5TopMovies","params","dynamicParams","key","fetch","then","res","json","getDiscoveryAPI","sort_by","movies","moviePosters","results","filter","movie","backdrop_path","chosenMovies","index","push","createMovieCarouslItem","setState","topMovies","Carousel","Item","className","src","alt","Caption","title","overview","state","this","React","Component","MovieCard","height","width","color","movDetails","movImgSrc","name","movName","rate","movRate","year","movYear","link","movLink","flipOnHover","flipOnClick","flipDirection","style","backgroundColor","left","right","href","opacity","Gallery","cards","map","x","margin","display","flexWrap","justifyContent","Paginator","choosePage","num","firstPage","prevPage","current","currentPage","parseInt","nextPage","numOfPages","lastPage","firstEl","Pagination","First","firstLabel","onClick","prevEl","Prev","nextEl","Next","lastEl","Last","pages","count","pageToSet","console","log","number","activeLabel","active","Home","componentDidMount","getMovies","page","tmdbData","tmdbCards","item","poster_path","vote_average","release_date","id","total_pages","pageNum","class","process","Container","About","Jumbotron","Row","Col","target","AdvancedSearch","Movie","toggleSpinner","imdbId","imdb_id","tmdbObj","original_title","image","tmdbRaiting","tagline","trailer","videos","tmdbInfo","omdbData","omdbObj","actors","Actors","writer","Writer","director","Director","rottenTomatoes","Ratings","Value","imdbRating","metacritic","genres","Genre","language","Language","plot","Plot","Year","runTime","Runtime","omdbInfo","match","template","undefined","lg","frameBorder","allow","allowFullScreen","withRouter","Search","getMoviesList","stream","crew","cast","moviesFound","filterdResults","poster","popularity","resultTMDB","onSearchChanged","list","toLocaleLowerCase","includes","filteredMovies","i","length","createMovieTab","value","ListGroup","action","onResultSelected","window","location","Form","Group","Control","type","placeholder","onChange","e","onMouseLeave","NavbarMovies","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","ScrollToTop","pathname","useLocation","useEffect","scrollTo","App","showSpinner","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.747d61af.chunk.js","sourcesContent":["export const TARANTINO_ID = 138;\r\nexport const API_KEY = '4b05d1f33354eefeaacd118430618d8f';\r\nexport const API_KEY_OMDB = 'de97b29a'; \r\nexport const PROTECT_TRAILER = \"6V1Sm0WCtHU\"\r\nexport const TARANTINO_IMAGE = 'https://m.media-amazon.com/images/M/MV5BMTgyMjI3ODA3Nl5BMl5BanBnXkFtZTcwNzY2MDYxOQ@@._V1_.jpg'\r\n\r\n\r\n","\r\nimport React from \"react\";\r\nimport { Carousel, Container } from \"react-bootstrap\";\r\nimport { getDiscoveryAPI } from \"../utils\";\r\n\r\nclass ImageCarusel extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            topMovies: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.get5TopMovies()\r\n    }\r\n\r\n    get5TopMovies = () => {\r\n        getDiscoveryAPI({ sort_by: \"popularity.desc\" }).then(movies => {\r\n            const moviePosters = movies.results.filter(movie => movie.backdrop_path)\r\n            const chosenMovies = []\r\n            for (let index = 0; index < 5; index++) {\r\n                chosenMovies.push(\r\n                    this.createMovieCarouslItem(moviePosters[index])\r\n                )\r\n                this.setState({\r\n                    topMovies: chosenMovies\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    createMovieCarouslItem = (movie) => {\r\n        return (<Carousel.Item>\r\n            <img\r\n                className=\"d-block images\"\r\n                src={`https://www.themoviedb.org/t/p/w1280${movie.backdrop_path}`}\r\n                alt=\"Second slide\"\r\n            />\r\n            <Carousel.Caption>\r\n                <h3>{movie.title}</h3>\r\n                <p>{movie.overview}</p>\r\n            </Carousel.Caption>\r\n        </Carousel.Item>)\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Carousel>\r\n                {this.state.topMovies}\r\n            </Carousel>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default ImageCarusel;","import { API_KEY } from \"./constants\";\r\n\r\nexport const getDiscoveryAPI = (params) => {\r\n    // Pass a key value object, where the key is the api key, and the value is the value for the api\r\n    // i.e. {page: 3, sort_by: 'primary_release_date.dsc'}\r\n    let dynamicParams = '';\r\n    for( let key in params) {\r\n        dynamicParams += '&' + key + '=' + params[key];\r\n    }\r\n    return fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&with_crew=138${dynamicParams}`)\r\n        .then(res => res.json());\r\n}\r\nexport const moviesToCards = (movies) => {\r\n    return movies.map((item) => {\r\n        return {\r\n            movName: item.title,\r\n            movImgSrc: item.poster_path,\r\n            movRate: item.vote_average, \r\n            movYear: item.release_date , \r\n            movLink: item.id \r\n        }\r\n    })\r\n}","import React from 'react';\r\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\r\nimport {Link} from 'react-router-dom';\r\nimport './MovieCard.css';\r\n\r\n//props: movDetails- object with the following fields: \r\n// movName- the name of the movie\r\n// movRate - imdb rate\r\n// movYear- year\r\n// movLink - link address of the details\r\n// movImgSrc- img src\r\n// second props: color- background color. default #c2d9ff\r\nexport default class MovieCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const height = \"300px\";\r\n        const  width = \"210px\";\r\n        const color = this.props.color || \"#f47a11\";\r\n \r\n        const src = 'https://image.tmdb.org/t/p/w500/' +this.props.movDetails.movImgSrc;\r\n        const name = this.props.movDetails.movName;\r\n        const rate = this.props.movDetails.movRate;\r\n        const year = this.props.movDetails.movYear;\r\n        const link = this.props.movDetails.movLink;\r\n        return (\r\n            <div>\r\n                <Flippy\r\n                    flipOnHover={true} // default false\r\n                    flipOnClick={false} // default false\r\n                    flipDirection=\"horizontal\" // horizontal or vertical\r\n                    className = \"mov-card\"\r\n                    style={{height, width}}\r\n                >\r\n                    <FrontSide style={{height, width, backgroundColor: color}}>\r\n                        <div style={{height: \"85%\"}}>\r\n                            <img src={src} alt=\"\"></img>\r\n                        </div>\r\n                        <p>\r\n                            {name}\r\n                        </p>\r\n                        <div className=\"card-mov-info\" style={{backgroundColor: color, left:\"7px\"}}>\r\n                            {year}\r\n                        </div>\r\n                        <div className=\"card-mov-info\" style={{backgroundColor: color, right:\"7px\"}}>\r\n                            {`⭐${rate}`}\r\n                        </div>\r\n                    </FrontSide>\r\n                    <BackSide\r\n                    style={{height, width, backgroundColor: color}}\r\n                    >\r\n                        <a href = {`#/movie/${link}`}>\r\n                        <div style={{height: \"85%\"}}>\r\n                            <img src={src} alt=\"\" style={{opacity: \"0.6\"}}></img>\r\n                        </div>\r\n                        <p>\r\n                            {name}\r\n                        </p>\r\n                        \r\n                        <button className=\"detailed-button\" style={{backgroundColor: color}}>\r\n                                Details\r\n                                </button>\r\n                        </a>\r\n                        \r\n                    </BackSide>\r\n                </Flippy>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport MovieCard from './MovieCard';\r\n\r\n// props:\r\n// cards - array of MovieCard element\r\nexport default class Gallery extends React.Component {\r\n    render() {\r\n        const cards = this.props.cards.map(x => <div style={{margin:\"20px\"}}>\r\n            <MovieCard \r\n                movDetails={x}\r\n            />    \r\n        </div>);\r\n        return (\r\n            <div className=\"container\" style={{display:\"flex\", flexWrap:\"wrap\",justifyContent:\"space-between\"}}>\r\n                {cards}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport './Paginator.css';\r\n\r\nclass Paginator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    choosePage = (num) => {\r\n        this.props.choosePage(num)\r\n    }\r\n\r\n    firstPage = () => {\r\n        this.props.choosePage(1)\r\n    }\r\n\r\n    prevPage = () => {\r\n        const current = this.props.currentPage;\r\n        if (current <= 1) {\r\n            return\r\n        }\r\n        else {\r\n            this.props.choosePage(parseInt(current - 1))\r\n        }\r\n    }\r\n\r\n    nextPage = () => {\r\n        const current = this.props.currentPage;\r\n        if (current >= this.props.numOfPages) {\r\n            return\r\n        }\r\n        else {\r\n            this.props.choosePage(parseInt(current + 1))\r\n        }\r\n    }\r\n\r\n    lastPage = () => {\r\n        this.props.choosePage(this.props.numOfPages)\r\n    }\r\n\r\n\r\n    render() {\r\n        const firstEl = this.props.currentPage > 2 ? <Pagination.First firstLabel=\"\" onClick={this.firstPage} /> : null;\r\n        const prevEl = this.props.currentPage > 1 ? <Pagination.Prev onClick={this.prevPage} /> : null;\r\n        const nextEl = this.props.currentPage < this.props.numOfPages ? <Pagination.Next onClick={this.nextPage} /> : null;\r\n        const lastEl = this.props.currentPage < this.props.numOfPages - 1 ? <Pagination.Last onClick={this.lastPage} /> : null;\r\n\r\n\r\n        const pages = [];\r\n        const currentPage = this.props.currentPage;\r\n        const numOfPages = this.props.numOfPages;\r\n      \r\n        //create the paginator\r\n    \r\n        let count = 0;\r\n        let pageToSet = currentPage == numOfPages ? currentPage-2 : currentPage-1;\r\n        while(count < 3 && pageToSet <= numOfPages){\r\n            if(pageToSet > 0){\r\n                count++;\r\n                pages.push(pageToSet);\r\n            }\r\n            pageToSet++\r\n        }\r\n        console.log(pages)\r\n     \r\n\r\n        return (\r\n            <div className=\"paginator-container\">\r\n                <Pagination className=\"paginator-el\">\r\n                    {firstEl}\r\n                    {prevEl}\r\n                    {pages.map(number => (\r\n                        <Pagination.Item\r\n                            key={number}\r\n                            activeLabel=\"\"\r\n                            active={number === this.props.currentPage}\r\n                            onClick={() => this.choosePage(number)}>\r\n                            {number}\r\n                        </Pagination.Item>\r\n                    ))}\r\n                    {nextEl}\r\n                    {lastEl}\r\n                </Pagination>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Paginator","import React from \"react\";\r\nimport ImageCarusel from '../components/ImageCarusel'\r\nimport Gallery from '../components/Gallery'\r\nimport './Home.css'\r\nimport { API_KEY, TARANTINO_ID } from \"../constants\";\r\nimport { moviesToCards } from \"../utils\";\r\nimport Paginator from \"../components/Paginator\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cards:[],\r\n            pageNum:1,\r\n            numOfPages :\"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n        // All this move to a function \r\n        this.getMovies(1);\r\n    }\r\n    getMovies = (page) => {\r\n        fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=release_date.desc&include_adult=false&include_video=false&page=${page}&with_people=${TARANTINO_ID}&with_watch_monetization_types=flatrate`)\r\n        .then((res) => res.json())\r\n        .then((tmdbData) => {\r\n            const page = tmdbData.page\r\n            const tmdbCards = moviesToCards (tmdbData.results)\r\n            this.setState({\r\n                cards: tmdbCards,\r\n                numOfPages: tmdbData.total_pages\r\n            })\r\n        })\r\n    }\r\n    choosePage = (page) => {\r\n        this.setState({\r\n            pageNum: page\r\n        })\r\n        this.getMovies(page);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"p-home\">\r\n                <div className=\"jumbotron\">\r\n                <div class=\"header-text-wrapper\">\r\n                    <h1 className=\"display-4 mx-3\">Quentin Tarantino</h1>\r\n                    \r\n                    <hr className=\"my-4\" />\r\n                    <p className=\"lead t-quote mx-3\">I want to risk hitting my head on the ceiling of my talent. I want to really test it out and say: Ok you’re not that good. You just reached the level here. I don’t ever want to fail, but I want to risk failure every time out of the gate</p>\r\n                    <img className=\"tarantino-img\"src={process.env.PUBLIC_URL + \"/t.png\"} alt=\"Logo\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"float-me-right\">\r\n                \r\n\r\n                </div>\r\n\r\n                <Container>\r\n                    <div className=\"custom-courusel\">\r\n                        <ImageCarusel />\r\n                    </div>\r\n                    <div className=\"custom-gallery\">\r\n                        <Gallery\r\n                            cards={this.state.cards}\r\n                        />\r\n                    </div>\r\n                    <div className=\"custom-paginator\">\r\n                        <Paginator\r\n                        choosePage={this.choosePage}\r\n                        currentPage={this.state.pageNum} \r\n                        numOfPages={this.state.numOfPages}\r\n                        />\r\n                    </div>  \r\n                </Container>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Col, Container, Image, Jumbotron, Row } from \"react-bootstrap\";\r\nimport './About.css'\r\n\r\nclass About extends React.Component{\r\n    render() {\r\n        return (\r\n            <Container className=\"p-about\">\r\n                <Jumbotron className=\"about-jumbo\">\r\n                    <h1>Quentin Tarantino</h1>\r\n                    <p className=\"lead\">Writer, Actor and Producer</p>\r\n                    <hr class=\"my-4\"></hr>\r\n                </Jumbotron>\r\n                <main className=\"about-text\">\r\n                    <p>Quentin Jerome Tarantino was born in Knoxville, Tennessee. His father, Tony Tarantino, is an Italian-American actor and musician from New York, and his mother, Connie (McHugh), is a nurse from Tennessee. Quentin moved with his mother to Torrance, California, when he was four years old.</p>\r\n                    <p>In January of 1992, first-time writer-director Tarantino's Calbay Ashmoret (1992) appeared at the Sundance Film Festival. The film garnered critical acclaim and the director became a legend immediately. Two years later, he followed up Dogs success with Sifrut Zolla (1994) which premiered at the Cannes film festival, winning the coveted Palme D'Or Award. At the 1995 Academy Awards, it was nominated for the best picture, best director and best original screenplay. Tarantino and writing partner Roger Avary came away with the award only for best original screenplay. In 1995, Tarantino directed one fourth of the anthology Araba'a Hadarim (1995) with friends and fellow auteurs Alexandre Rockwell, Robert Rodriguez and Allison Anders. The film opened December 25 in the United States to very weak reviews. Tarantino's next film was From Dusk Till Dawn (1996), a vampire/crime story which he wrote and co-starred with George Clooney. The film did fairly well theatrically.</p>\r\n                    <p>Since then, Tarantino has helmed several critically and financially successful films, including Jackie Brown (1997), Kill Bill: Vol. 1 (2003), Kill Bill: Vol. 2 (2004), Mamzerim Chasere Kavod (2009), Django Lelo Ma'atzorim (2012) and Shmonat ha'snou'im (2015).</p>\r\n                </main>\r\n                <Row className=\"gallery-qt\">\r\n                    <img src=\"https://m.media-amazon.com/images/M/MV5BMTgyMjI3ODA3Nl5BMl5BanBnXkFtZTcwNzY2MDYxOQ@@._V1_.jpg\"></img>\r\n                    <img src=\"https://www.madametussauds.com/wien/media/kjpavjjg/quentin-tarantino2-min.jpg\"></img>\r\n                    <img src=\"https://www.dailysquat.com/wp-content/uploads/2021/04/quentin-tarantino-athletes-mouth.jpg\"></img>\r\n                    <img src=\"https://s.studiobinder.com/wp-content/uploads/2019/09/Quentin-Tarantinos-Star-Trek-Featured-StudioBinder.jpg\"></img>\r\n                    <img src=\"https://consequence.net/wp-content/uploads/2019/07/quentin-tarantino-lines.png\"></img>\r\n                    <img src=\"https://www.jpost.com//HttpHandlers/ShowImage.ashx?id=387175&w=640&h=428\"></img>\r\n                </Row>\r\n                <Row className=\"more-info justify-content-center\">\r\n                    <Col><a href=\"https://en.wikipedia.org/wiki/Quentin_Tarantino\" target=\"_blank\">Wikipedia</a>\r\n                    </Col>\r\n                    <Col><a href=\"https://www.imdb.com/name/nm0000233/\" target=\"_blank\">QT at IMDb</a>\r\n                    </Col>\r\n                    <Col><a href=\"https://www.rottentomatoes.com/celebrity/quentin_tarantino\" target=\"_blank\">QT at Rotten Tomatoes</a>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\n\r\nclass AdvancedSearch extends React.Component{\r\n    render() {\r\n        return <div>AdvancedSearch</div>\r\n    }\r\n}\r\n\r\nexport default AdvancedSearch;","import React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router\";\r\nimport { API_KEY, API_KEY_OMDB, PROTECT_TRAILER, TARANTINO_IMAGE } from \"../constants\";\r\nimport \"./Movie.css\"\r\n\r\nclass Movie extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.id = this.props.match.params.id\r\n        this.state = {\r\n            tmdbInfo:{},\r\n            omdbInfo:{}\r\n        };\r\n    }\r\n    //\r\n    componentDidMount = () => {\r\n        this.props.toggleSpinner(true);\r\n        fetch(`https://api.themoviedb.org/3/movie/${this.id}?api_key=${API_KEY}&language=en-US&append_to_response=videos`)\r\n        .then((res) => res.json())\r\n        .then((tmdbData) => {\r\n            const imdbId = tmdbData.imdb_id;\r\n            const tmdbObj ={\r\n            title: tmdbData.original_title,\r\n            image: (tmdbData.poster_path)?tmdbData.poster_path:TARANTINO_IMAGE,\r\n            tmdbRaiting: tmdbData.vote_average,\r\n            tagline: tmdbData.tagline,\r\n            trailer : (tmdbData.videos&&tmdbData.videos.results[0]&& tmdbData.videos.results[0].key)? tmdbData.videos.results[0].key : PROTECT_TRAILER\r\n        }\r\n            console.log(tmdbObj)\r\n            this.setState({\r\n                tmdbInfo: tmdbObj\r\n            })\r\n            return imdbId;\r\n        })\r\n         .then( (imdbId) => {\r\n            \r\n            fetch(`http://www.omdbapi.com/?apikey=${API_KEY_OMDB}&i=${imdbId}`)\r\n            .then(res => res.json())\r\n            .then( (omdbData) => {\r\n                const omdbObj ={\r\n                    actors: (omdbData.Actors)?omdbData.Actors: \"unknown\",\r\n                    writer : (omdbData.Writer)?omdbData.Writer: \"unknown\",\r\n                    director : (omdbData.Director)?omdbData.Director: \"unknown\", \r\n                    rottenTomatoes : (omdbData.Ratings && omdbData.Ratings[1]&&omdbData.Ratings[1].Value)?omdbData.Ratings[1].Value:\"No raiting\",\r\n                    imdbRating : omdbData.imdbRating,\r\n                    metacritic :  (omdbData.Ratings && omdbData.Ratings[2]&&omdbData.Ratings[2].Value)?omdbData.Ratings[2].Value:\"No raiting\",\r\n                    genres : (omdbData.Genre)?omdbData.Genre: \"unknown\",\r\n                    language : (omdbData.Language)?omdbData.Language: \"unknown\",\r\n                    plot : omdbData.Plot,\r\n                    year: (omdbData.Year)?omdbData.Year: \"unknown\",\r\n                    runTime:(omdbData.Runtime)?omdbData.Runtime: \"unknown\",\r\n                }\r\n                this.props.toggleSpinner(false);\r\n                this.setState({\r\n                    omdbInfo: omdbObj\r\n                })\r\n            })\r\n    })\r\n}\r\n    render() {\r\n        let template = '';\r\n        if (this.state.tmdbInfo === undefined||this.state.omdbInfo === undefined ){\r\n             template = <div>loading</div>\r\n        }\r\n        else{\r\n            template = (\r\n                        <div>\r\n                            <div className=\"jumbotron\">\r\n                                <h1 className=\"display-3 text-center\">{this.state.tmdbInfo.title}</h1>\r\n                                <p className=\"display-6 text-center\">{this.state.tmdbInfo.tagline}</p>\r\n                                <hr className=\"my-3\"/>\r\n                                <p className=\" lead text-center\">Directed by: {this.state.omdbInfo.director} </p>\r\n                            </div>\r\n                            <div className=\"container\">\r\n                                <Row>\r\n                                    <Col lg={6} className=\"text-center\">\r\n                                        <img src={`https://image.tmdb.org/t/p/w400${this.state.tmdbInfo.image}`} alt={this.state.tmdbInfo.title}/>\r\n                                    </Col>\r\n                                    <Col lg={6}>\r\n                                    <dl className=\"row\">\r\n                                        <dt className=\"col-sm-3\">Genres:</dt>\r\n                                        <dd className=\"col-sm-9\">{this.state.omdbInfo.genres}</dd>\r\n\r\n                                        <dt className=\"col-sm-3\">About:</dt>\r\n                                        <dd className=\"col-sm-9\">\r\n                                            <p>{this.state.omdbInfo.plot}</p>\r\n                                        </dd>\r\n                                        <dt className=\"col-sm-3\">Runtime: </dt>\r\n                                        <dd className=\"col-sm-9\">{this.state.omdbInfo.runTime}</dd>\r\n                                        <dt className=\"col-sm-3\">Writers: </dt>\r\n                                        <dd className=\"col-sm-9\">{this.state.omdbInfo.writer}</dd>\r\n                                        <dt className=\"col-sm-3\">Actors: </dt>\r\n                                        <dd className=\"col-sm-9\">{this.state.omdbInfo.actors}</dd>\r\n                                        <dt className=\"col-sm-3\">Language: </dt>\r\n                                        <dd className=\"col-sm-9\">{this.state.omdbInfo.language}</dd>\r\n                                        <dt className=\"col-sm-3\">Year: </dt>\r\n                                        <dd className=\"col-sm-9\">{this.state.omdbInfo.year}</dd>\r\n\r\n                                        <dt className=\"col-sm-3\">Raitings</dt>\r\n                                        <dd className=\"col-sm-9\">\r\n                                            <dl className=\"row\">\r\n                                            <dt className=\"col-sm-4\">IMDB:</dt>\r\n                                            <dd className=\"col-sm-8\">{this.state.tmdbInfo.tmdbRaiting}</dd>\r\n                                            </dl>\r\n                                            <dl className=\"row\">\r\n                                            <dt className=\"col-sm-4\">TMDB:</dt>\r\n                                            <dd className=\"col-sm-8\">{this.state.omdbInfo.imdbRating}</dd>\r\n                                            </dl>\r\n                                            <dl className=\"row\">\r\n                                            <dt className=\"col-sm-4\">Rotten Tomatoes:</dt>\r\n                                            <dd className=\"col-sm-8\">{this.state.omdbInfo.rottenTomatoes}</dd>\r\n                                            </dl>\r\n                                            <dl className=\"row\">\r\n                                            <dt className=\"col-sm-4\">Metacritic:</dt>\r\n                                            <dd className=\"col-sm-8\">{this.state.omdbInfo.metacritic}</dd>\r\n                                            </dl>\r\n                                        </dd>\r\n                                    </dl>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <div className =\"text-center mt-5 iframe-container\">\r\n                                        <h5>Trailer</h5>\r\n                                    <iframe width=\"1280\" height=\"720\" src={`https://www.youtube.com/embed/${this.state.tmdbInfo.trailer}`} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                                    </div>\r\n                                </Row>\r\n                            </div>\r\n                        </div>\r\n            )\r\n        }\r\n        return (<div className=\"p-movie\">\r\n                {template}\r\n            </div>)\r\n    }\r\n}\r\nexport default withRouter (Movie);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Form, ListGroup } from 'react-bootstrap';\r\nimport { API_KEY, TARANTINO_ID, TARANTINO_IMAGE } from '../constants';\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            resultTMDB: [],\r\n            filteredMovies: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMoviesList();\r\n    }\r\n\r\n    getMoviesList = () => {\r\n        fetch(`https://api.themoviedb.org/3/person/${TARANTINO_ID}/movie_credits?api_key=${API_KEY}`)\r\n            .then((stream) => stream.json())\r\n            .then((res) => {\r\n                if (res && res.crew && res.cast) {\r\n\r\n                    const moviesFound = {}\r\n                    const allMovies = [...res.cast, ...res.crew]\r\n                    const results = allMovies.filter(movie => {\r\n                        if (moviesFound[movie.original_title]) {\r\n                            return false\r\n                        }\r\n                        else {\r\n                            moviesFound[movie.original_title] = true;\r\n                            return true\r\n                        }\r\n                    })\r\n                    const filterdResults = results.map(movie => {\r\n                        return {\r\n                            name: movie.original_title,\r\n                            id: movie.id,\r\n                            poster: movie.poster_path,\r\n                            release_date: movie.release_date,\r\n                            popularity: movie.popularity\r\n                        }\r\n                    })\r\n                    this.setState(\r\n                        {\r\n                            resultTMDB: filterdResults,\r\n                        }\r\n                    )\r\n                }\r\n            })\r\n    }\r\n\r\n    onSearchChanged = (filter) => {\r\n        const list = this.state.resultTMDB.filter(movie => {\r\n            return movie.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\r\n        })\r\n        const filteredMovies = []\r\n\r\n        if (list) {\r\n            for (let i = 0; i < 10 && i < list.length; i++) {\r\n                filteredMovies.push(this.createMovieTab(list[i]))\r\n            }\r\n\r\n            this.setState({\r\n                value: filter,\r\n                filteredMovies: filteredMovies\r\n            })\r\n        }\r\n    }\r\n\r\n    createMovieTab = (movie) => {\r\n        let poster;\r\n        if (!movie.poster) {\r\n            poster = TARANTINO_IMAGE\r\n        } else {\r\n            poster = `https://www.themoviedb.org/t/p/w500${movie.poster}`\r\n        }\r\n        return (<ListGroup.Item\r\n            action key={movie.id}\r\n            onClick={() => { this.onResultSelected(movie.id, movie.name) }}>\r\n            <div className=\"movie-tab\">\r\n                <img className=\"image-tab\" src={poster} />\r\n                <div className=\"movie-name-tab\">{movie.name}</div>\r\n            </div>\r\n        </ListGroup.Item>)\r\n    }\r\n\r\n    onResultSelected = (id, name) => {\r\n        this.setState({\r\n            name: \"\",\r\n            filteredMovies: \"\"\r\n        })\r\n        window.location.href = `#movie/${id}`\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form.Group>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    value={this.state.value}\r\n                    placeholder=\"Search for a movie\"\r\n                    onChange={(e) => { this.onSearchChanged(e.target.value) }} />\r\n                <ListGroup className=\"movies-search\" onMouseLeave={() => this.setState({ filteredMovies: \"\", value: \"\" })}>\r\n                    {this.state.filteredMovies}\r\n                </ListGroup>\r\n            </Form.Group>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withRouter(Search)\r\n","import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport './NavbarMovies.css'\r\nimport Search from './Search';\r\n\r\nclass NavbarMovies extends React.Component {\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className=\"movies-navbar\">\r\n                <Navbar.Brand href=\"#/\"><img className=\"logo\" src={process.env.PUBLIC_URL + \"logo.jpg\"} alt=\"Logo\" /></Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav>\r\n                        <Nav.Link href=\"#/about\">About</Nav.Link>\r\n                    </Nav>\r\n                    <Nav className=\"left-nav\">\r\n                        <Nav.Link><Search /></Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavbarMovies;","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport Home from './pages/Home';\r\nimport About from './pages/About';\r\nimport AdvancedSearch from './pages/AdvancedSearch';\r\nimport Movie from './pages/Movie';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport NavbarMovies from './components/NavbarMovies';\r\nimport ScrollToTop from './components/ScrollToTops';\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showSpinner: false,\r\n        }\r\n    } \r\n    toggleSpinner = (showSpinner) => {\r\n        this.setState(\r\n            {showSpinner}\r\n        )\r\n    }\r\n  render(){\r\n        return (\r\n            <HashRouter>\r\n                <ScrollToTop/>\r\n                <NavbarMovies />\r\n                <Route exact path=\"/\">\r\n                    <Home toggleSpinner={this.toggleSpinner}></Home>\r\n                </Route>\r\n                <Route exact path=\"/about\">\r\n                    <About></About>\r\n                </Route>\r\n                <Route exact path=\"/advanced-search\">\r\n                    <AdvancedSearch></AdvancedSearch>\r\n                </Route>\r\n                <Route exact path=\"/movie/:id\">\r\n                    <Movie toggleSpinner={this.toggleSpinner}></Movie>\r\n                </Route>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}